/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     icoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         2;

deltaT          0.001;

writeControl    adjustableRunTime;

writeInterval   0.01;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression on;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

libs (
    "libsimpleLagrangianFunctionObjects.so"
    "libswakFunctionObjects.so"
    "libswakScriptableLagrangian.so"
    "libswakLuaIntegration.so"
    "libswakVelocityFunctionPlugin.so"
);

functions {
    streamFunction {
        type expressionField;
        fieldName streamF;
        expression "interpolateToCell(streamFunction(phi))";
        autowrite true;
        outputControl timeStep;
        outputInterval 1;
    }
    minLocation {
        type calculateGlobalVariables;
        outputControl timeStep;
        outputInterval 1;
        valueType internalField;
        toGlobalNamespace injectorData;
        toGlobalVariables (
            centerPoint
        );
        variables (
                "centerPoint=minPosition(streamF);"
        );
        noReset true;
    }
    rhoField {
        type expressionField;
        fieldName pseudoRho;
        expression "1";
        autowrite false;
        outputControl timeStep;
        outputInterval 1;
    }
    muField {
        type expressionField;
        fieldName pseudoMu;
        expression "1e-4";
        autowrite false;
        outputControl timeStep;
        outputInterval 1;
    }
    coldParticle {
        type evolveKinematicCloud;
        cloudName coldParticleCloud;
        g "down" [0 1 -2 0 0 0 0] (0 -9.81 0);
        rhoName pseudoRho;
        muName pseudoMu;
        UName U;
        //   SLGThermoName SLGThermo;
        autowrite false;
    }
}
// ************************************************************************* //
